<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\LinodeInstances;

use Linode\Entity;

/**
 * A dictionary of device disks to use as a device map in a Linode's configuration
 * profile.
 * * An empty device disk dictionary or a dictionary with empty values for device
 * slots is allowed.
 * * If no devices are specified, booting from this configuration will hold until a
 * device exists that allows the boot process to start.
 *
 * @property Device $sda Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdb Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdc Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdd Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sde Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdf Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdg Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 * @property Device $sdh Device can be either a Disk or Volume identified by `disk_id` or `volume_id`. Only
 *                       one type per slot allowed. Can be null.
 *                       Devices mapped from _sde_ through _sdh_ are unavailable in `fullvirt` virt_mode.
 */
class Devices extends Entity
{
    // Available fields.
    public const FIELD_SDA = 'sda';
    public const FIELD_SDB = 'sdb';
    public const FIELD_SDC = 'sdc';
    public const FIELD_SDD = 'sdd';
    public const FIELD_SDE = 'sde';
    public const FIELD_SDF = 'sdf';
    public const FIELD_SDG = 'sdg';
    public const FIELD_SDH = 'sdh';

    /**
     * @codeCoverageIgnore This method was autogenerated.
     */
    public function __get(string $name): mixed
    {
        return match ($name) {
            default => new Device($this->client, $this->data[$name]),
        };
    }
}
