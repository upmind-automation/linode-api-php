<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\LKE\Repository;

use Linode\Entity;
use Linode\Internal\AbstractRepository;
use Linode\LKE\LKECluster;
use Linode\LKE\LKEClusterRepositoryInterface;

/**
 * @codeCoverageIgnore This class was autogenerated.
 */
class LKEClusterRepository extends AbstractRepository implements LKEClusterRepositoryInterface
{
    public function createLKECluster(array $parameters = []): LKECluster
    {
        $response = $this->client->post($this->getBaseUri(), $parameters);
        $contents = $response->getBody()->getContents();
        $json     = json_decode($contents, true);

        return new LKECluster($this->client, $json);
    }

    public function putLKECluster(int $clusterId, array $parameters = []): LKECluster
    {
        $response = $this->client->put(sprintf('%s/%s', $this->getBaseUri(), $clusterId), $parameters);
        $contents = $response->getBody()->getContents();
        $json     = json_decode($contents, true);

        return new LKECluster($this->client, $json);
    }

    public function deleteLKECluster(int $clusterId): void
    {
        $this->client->delete(sprintf('%s/%s', $this->getBaseUri(), $clusterId));
    }

    protected function getBaseUri(): string
    {
        return 'beta/lke/clusters';
    }

    protected function getSupportedFields(): array
    {
        return [
            LKECluster::FIELD_ID,
            LKECluster::FIELD_LABEL,
            LKECluster::FIELD_REGION,
            LKECluster::FIELD_CREATED,
            LKECluster::FIELD_UPDATED,
            LKECluster::FIELD_VERSION,
            LKECluster::FIELD_TAGS,
        ];
    }

    protected function jsonToEntity(array $json): Entity
    {
        return new LKECluster($this->client, $json);
    }
}
