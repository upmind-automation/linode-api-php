<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\Networking;

use Linode\Entity;
use Linode\Networking\Repository\FirewallDevicesRepository;

/**
 * A resource that controls incoming and outgoing network traffic to a Linode
 * service. Only one Firewall can be attached to a Linode at any given time. Create a
 * Firewall Device to assign a Firewall to a Linode service. Currently, Firewalls can
 * only be assigned to Linode instances.
 *
 * @property int                                $id      The Firewall's unique ID.
 * @property string                             $label   The Firewall's label, for display purposes only.
 *                                                       Firewall labels have the following constraints:
 *                                                       * Must begin and end with an alphanumeric character.
 *                                                       * May only consist of alphanumeric characters, dashes (`-`), underscores (`_`)
 *                                                       or periods (`.`).
 *                                                       * Cannot have two dashes (`--`), underscores (`__`) or periods (`..`) in a row.
 *                                                       * Must be between 3 and 32 characters.
 *                                                       * Must be unique.
 * @property string                             $status  The status of this Firewall.
 *                                                       * When a Firewall is first created its status is `enabled`.
 *                                                       * Use the Update Firewall endpoint to set a Firewall's status to `enabled` or
 *                                                       `disabled`.
 *                                                       * Use the Delete Firewall endpoint to delete a Firewall.
 * @property string                             $created When this Firewall was created.
 * @property string                             $updated When this Firewall was last updated.
 * @property FirewallRules                      $rules   The inbound and outbound access rules to apply to the Firewall.
 *                                                       A Firewall may have up to 25 rules across its inbound and outbound rulesets.
 * @property string[]                           $tags    An array of tags applied to this object. Tags are for organizational purposes
 *                                                       only.
 * @property FirewallDevicesRepositoryInterface $devices Firewall devices.
 */
class Firewall extends Entity
{
    // Available fields.
    public const FIELD_ID      = 'id';
    public const FIELD_LABEL   = 'label';
    public const FIELD_STATUS  = 'status';
    public const FIELD_CREATED = 'created';
    public const FIELD_UPDATED = 'updated';
    public const FIELD_RULES   = 'rules';
    public const FIELD_TAGS    = 'tags';

    // Extra fields for POST/PUT requests.
    public const FIELD_DEVICES  = 'devices';
    public const FIELD_INBOUND  = 'inbound';
    public const FIELD_OUTBOUND = 'outbound';

    // `FIELD_STATUS` values.
    public const STATUS_ENABLED  = 'enabled';
    public const STATUS_DISABLED = 'disabled';
    public const STATUS_DELETED  = 'deleted';

    /**
     * @codeCoverageIgnore This method was autogenerated.
     */
    public function __get(string $name): mixed
    {
        return match ($name) {
            self::FIELD_DEVICES => new FirewallDevicesRepository($this->client, $this->id),
            default             => parent::__get($name),
        };
    }
}
