<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\VPC;

use Linode\Entity;
use Linode\VPC\Repository\VPCSubnetRepository;

/**
 * An object describing a VPC belonging to the Account.
 *
 * @property int                          $id          The unique ID of the VPC.
 * @property string                       $label       The VPC's label, for display purposes only.
 *                                                     * Needs to be unique among the Account's VPCs.
 *                                                     * Can only contain ASCII letters, numbers, and hyphens (`-`). You can't use two
 *                                                     consecutive hyphens (`--`).
 * @property string                       $description A written description to help distinguish the VPC.
 * @property string                       $region      The Region for the VPC.
 * @property VPCSubnet[]                  $subnets     A list of subnets associated with the VPC.
 * @property string                       $created     The date-time of VPC creation.
 * @property null|string                  $updated     The date-time of the most recent VPC update.
 * @property VPCSubnetRepositoryInterface $vpcSubnets  VPC Subnets.
 */
class VPC extends Entity
{
    // Available fields.
    public const FIELD_ID          = 'id';
    public const FIELD_LABEL       = 'label';
    public const FIELD_DESCRIPTION = 'description';
    public const FIELD_REGION      = 'region';
    public const FIELD_SUBNETS     = 'subnets';
    public const FIELD_CREATED     = 'created';
    public const FIELD_UPDATED     = 'updated';

    /**
     * @codeCoverageIgnore This method was autogenerated.
     */
    public function __get(string $name): mixed
    {
        return match ($name) {
            'vpcSubnets' => new VPCSubnetRepository($this->client, $this->id),
            default      => parent::__get($name),
        };
    }
}
