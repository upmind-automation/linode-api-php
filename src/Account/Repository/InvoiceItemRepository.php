<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\Account\Repository;

use Linode\Account\InvoiceItem;
use Linode\Account\InvoiceItemRepositoryInterface;
use Linode\Entity;
use Linode\Internal\AbstractRepository;
use Linode\LinodeClient;

/**
 * @codeCoverageIgnore This class was autogenerated.
 */
class InvoiceItemRepository extends AbstractRepository implements InvoiceItemRepositoryInterface
{
    /**
     * @param int $invoiceId The ID of the Invoice.
     */
    public function __construct(LinodeClient $client, protected int $invoiceId)
    {
        parent::__construct($client);
    }

    protected function getBaseUri(): string
    {
        return sprintf('/account/invoices/%s/items', $this->invoiceId);
    }

    protected function getSupportedFields(): array
    {
        return [
            InvoiceItem::FIELD_LABEL,
            InvoiceItem::FIELD_FROM,
            InvoiceItem::FIELD_TO,
            InvoiceItem::FIELD_AMOUNT,
            InvoiceItem::FIELD_TAX,
            InvoiceItem::FIELD_TOTAL,
            InvoiceItem::FIELD_REGION,
            InvoiceItem::FIELD_QUANTITY,
            InvoiceItem::FIELD_UNIT_PRICE,
            InvoiceItem::FIELD_TYPE,
        ];
    }

    protected function jsonToEntity(array $json): Entity
    {
        return new InvoiceItem($this->client, $json);
    }
}
