<?php

// ---------------------------------------------------------------------
//
//  Copyright (C) 2018-2024 Artem Rodygin
//
//  You should have received a copy of the MIT License along with
//  this file. If not, see <https://opensource.org/licenses/MIT>.
//
// ---------------------------------------------------------------------

namespace Linode\Account\Repository;

use Linode\Account\PaymentMethod;
use Linode\Account\PaymentMethodRepositoryInterface;
use Linode\Entity;
use Linode\Internal\AbstractRepository;

/**
 * @codeCoverageIgnore This class was autogenerated.
 */
class PaymentMethodRepository extends AbstractRepository implements PaymentMethodRepositoryInterface
{
    public function createPaymentMethod(array $parameters = []): void
    {
        $this->client->post($this->getBaseUri(), $parameters);
    }

    public function deletePaymentMethod(int $paymentMethodId): void
    {
        $this->client->delete(sprintf('%s/%s', $this->getBaseUri(), $paymentMethodId));
    }

    public function makePaymentMethodDefault(int $paymentMethodId): void
    {
        $this->client->post(sprintf('%s/%s/make-default', $this->getBaseUri(), $paymentMethodId));
    }

    protected function getBaseUri(): string
    {
        return '/account/payment-methods';
    }

    protected function getSupportedFields(): array
    {
        return [
            PaymentMethod::FIELD_ID,
            PaymentMethod::FIELD_TYPE,
            PaymentMethod::FIELD_IS_DEFAULT,
            PaymentMethod::FIELD_CREATED,
            PaymentMethod::FIELD_DATA,
        ];
    }

    protected function jsonToEntity(array $json): Entity
    {
        return new PaymentMethod($this->client, $json);
    }
}
